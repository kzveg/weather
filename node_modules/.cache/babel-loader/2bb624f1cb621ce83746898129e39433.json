{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CitysList.js\",\n    _s = $RefreshSig$();\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { citys } from '../mock-items.js/sitys';\nimport { getFirstData } from '../redux/actions';\nimport CityWeather from './CityWeather';\nimport { dataCard } from './CityWeather';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CityList() {\n  _s();\n\n  const [weather, setWeather] = useState(true);\n  const [dataCity, setDataCity] = useState(items);\n  const dispatch = useDispatch();\n  let items = useSelector(state => state.sitys); // console.log(items.el.city);\n\n  console.log(items);\n  let card = items.map(el => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 200\n    },\n    onClick: () => showWeather(el),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        alt: \"weather\",\n        height: \"140\",\n        src: \"https://t3.ftcdn.net/jpg/02/11/52/42/360_F_211524227_Ett8aboQvVnROAFtqu3S1pW99Y3Th9vm.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h3\",\n          component: \"div\",\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"div\",\n          children: [el.temp, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), el.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this));\n\n  function showWeather(el) {\n    // dispatch({\n    //     type: 'ONE_CITY',\n    //     payload: {\n    //         id: el.id\n    //     }\n    // })\n    // console.log(el.id);\n    // setWeather(!weather)\n    dataCard = el;\n    console.log(el); // weatherCityId = el.id;\n\n    setWeather(!weather);\n  }\n\n  function deleteCity() {\n    dispatch({\n      type: 'DELETE_CITY',\n      payload: {\n        id: items[0].id\n      }\n    });\n    console.log(items[0].id); // setShow(!show)\n  }\n\n  function deleteCity() {\n    console.log('delete');\n  }\n\n  function showCitys() {\n    console.log('show');\n  }\n\n  let content = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 19\n  }, this); // <div>\n  //     <div className='showcity'>\n  //         <div className='close'><CloseIcon onClick={() => showCitys()} cursor='pointer' /></div>\n  //         <div className='showcity-name'>\n  //             < AutorenewIcon sx={{ fontSize: 30 }} onClick={() => console.log('update')} cursor='pointer' />\n  //             {dataCard.city}\n  //             <DeleteForeverIcon color=\"warning\" sx={{ fontSize: 40 }} onClick={() => deleteCity()} cursor='pointer' />\n  //         </div>\n  //         <div className='showcity-description'>\n  //             <ul className='ul'>\n  //                 <li> temp - {dataCard.temp} </li>\n  //                 <li>tempMax - {dataCard.tempMax}</li>\n  //                 <li> tempMin - {dataCard.tempMin}</li>\n  //                 <li> description - {dataCard.description}</li>\n  //                 <li>windSpeed - {dataCard.windSpeed}</li>\n  //                 <li>windGust - {dataCard.windGust}</li>\n  //                 <li>humidity - {dataCard.humidity}</li>\n  //                 <li> pressure - {dataCard.pressure}</li>\n  //             </ul>\n  //         </div>\n  //     </div>\n  // </div>\n\n\n  if (weather) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"citys\",\n      children: [\" \", card, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CityList, \"xcZZBxiiB3k/dmIFIYZNd96wKiE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CityList;\nexport default CityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CitysList.js"],"names":["Card","CardActions","CardContent","CardMedia","Typography","useEffect","useState","useSelector","useDispatch","citys","getFirstData","CityWeather","dataCard","CloseIcon","AutorenewIcon","DeleteForeverIcon","CityList","weather","setWeather","dataCity","setDataCity","items","dispatch","state","sitys","console","log","card","map","el","maxWidth","showWeather","name","temp","description","deleteCity","type","payload","id","showCitys","content"],"mappings":"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","sourcesContent":["import Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { citys } from '../mock-items.js/sitys';\nimport { getFirstData } from '../redux/actions';\nimport CityWeather from './CityWeather';\nimport { dataCard } from './CityWeather'\nimport CloseIcon from '@mui/icons-material/Close';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\n\n\n\n\nfunction CityList() {\n\n\n    const [weather, setWeather] = useState(true)\n    const [dataCity, setDataCity] = useState(items)\n\n    const dispatch = useDispatch()\n\n    let items = useSelector((state) => state.sitys)\n    // console.log(items.el.city);\n    console.log(items);\n\n\n\n\n    let card = items.map(el =>\n        <Card sx={{ maxWidth: 200 }} onClick={() => showWeather(el)}>\n            <div className=\"cardWrapper\" >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"weather\"\n                    height=\"140\"\n                    src=\"https://t3.ftcdn.net/jpg/02/11/52/42/360_F_211524227_Ett8aboQvVnROAFtqu3S1pW99Y3Th9vm.jpg\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h3\" component=\"div\">\n                        {el.name}\n\n                    </Typography>\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\n                        {el.temp}\n                        <br />\n                        {el.description}\n                    </Typography>\n                </CardContent>\n            </div>\n        </Card >)\n\n    function showWeather(el) {\n        // dispatch({\n        //     type: 'ONE_CITY',\n        //     payload: {\n        //         id: el.id\n        //     }\n        // })\n        // console.log(el.id);\n        // setWeather(!weather)\n        dataCard = el;\n        console.log(el);\n\n        // weatherCityId = el.id;\n        setWeather(!weather)\n    }\n\n    function deleteCity() {\n        dispatch({\n            type: 'DELETE_CITY',\n            payload: {\n                id: items[0].id\n            }\n        })\n        console.log(items[0].id);\n        // setShow(!show)\n    }\n\n    function deleteCity() {\n        console.log('delete');\n    }\n    function showCitys() {\n        console.log('show');\n    }\n\n\n    let content = <div></div>\n    // <div>\n    //     <div className='showcity'>\n    //         <div className='close'><CloseIcon onClick={() => showCitys()} cursor='pointer' /></div>\n    //         <div className='showcity-name'>\n    //             < AutorenewIcon sx={{ fontSize: 30 }} onClick={() => console.log('update')} cursor='pointer' />\n    //             {dataCard.city}\n    //             <DeleteForeverIcon color=\"warning\" sx={{ fontSize: 40 }} onClick={() => deleteCity()} cursor='pointer' />\n    //         </div>\n    //         <div className='showcity-description'>\n    //             <ul className='ul'>\n    //                 <li> temp - {dataCard.temp} </li>\n    //                 <li>tempMax - {dataCard.tempMax}</li>\n    //                 <li> tempMin - {dataCard.tempMin}</li>\n    //                 <li> description - {dataCard.description}</li>\n    //                 <li>windSpeed - {dataCard.windSpeed}</li>\n    //                 <li>windGust - {dataCard.windGust}</li>\n    //                 <li>humidity - {dataCard.humidity}</li>\n    //                 <li> pressure - {dataCard.pressure}</li>\n    //             </ul>\n    //         </div>\n    //     </div>\n    // </div>\n\n\n\n    if (weather) {\n        content = < div className='citys' > {card} </div >\n    }\n\n\n\n    return (\n        <div >{content}</div>\n    )\n\n}\n\n\n\nexport default CityList;"]},"metadata":{},"sourceType":"module"}