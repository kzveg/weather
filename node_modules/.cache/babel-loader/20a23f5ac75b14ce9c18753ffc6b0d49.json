{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/projects/react/itRex/mainApp/table/src/components/filterTable.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getData, setFilter } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FilterTable = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.table.filter);\n  useEffect(() => {\n    dispatch(getData());\n  }, [dispatch]);\n\n  function uniqueItem(arr) {\n    let result = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (!result.includes(arr[i])) {\n        result.push(arr[i]);\n      }\n    }\n\n    return result;\n  }\n\n  const myClick = event => {\n    debugger;\n    dispatch(setFilter(event.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    type: \"checkbox\",\n    id: \"myCheck\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"select_\",\n      onChange: myClick,\n      children: uniqueItem(filter).map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FilterTable, \"3j78DBGait8jEw08wF7Memj+yWc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FilterTable;\nexport default FilterTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterTable\");","map":{"version":3,"sources":["/Users/kostya/projects/react/itRex/mainApp/table/src/components/filterTable.js"],"names":["useEffect","useSelector","useDispatch","getData","setFilter","FilterTable","dispatch","filter","state","table","uniqueItem","arr","result","i","length","includes","push","myClick","event","target","value","map","item"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,kBAAnC;;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,MAAM,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,MAAtB,CAA1B;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,QAAQ,CAACH,OAAO,EAAR,CAAR;AACH,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;;AAIA,WAASI,UAAT,CAAoBC,GAApB,EAAyB;AACrB,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,UAAI,CAACD,MAAM,CAACG,QAAP,CAAgBJ,GAAG,CAACE,CAAD,CAAnB,CAAL,EAA8B;AAC1BD,QAAAA,MAAM,CAACI,IAAP,CAAYL,GAAG,CAACE,CAAD,CAAf;AACH;AACJ;;AACD,WAAOD,MAAP;AACH;;AAED,QAAMK,OAAO,GAAGC,KAAK,IAAI;AACrB;AACAZ,IAAAA,QAAQ,CAACF,SAAS,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV,CAAR;AACH,GAHD;;AAMA,sBACI;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,EAAE,EAAC,SAAzB;AAAA,2BACI;AAAQ,MAAA,EAAE,EAAC,SAAX;AAAqB,MAAA,QAAQ,EAAEH,OAA/B;AAAA,gBACKP,UAAU,CAACH,MAAD,CAAV,CAAmBc,GAAnB,CAAuBC,IAAI,iBACxB;AAAA,kBAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlCD;;GAAMjB,W;UACeH,W,EACFD,W;;;KAFbI,W;AAoCN,eAAeA,WAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getData, setFilter } from \"../redux/actions\";\n\n\nconst FilterTable = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(state => state.table.filter);\n\n\n    useEffect(() => {\n        dispatch(getData())\n    }, [dispatch])\n\n    function uniqueItem(arr) {\n        let result = [];\n        for (let i = 0; i < arr.length; i++) {\n            if (!result.includes(arr[i])) {\n                result.push(arr[i]);\n            }\n        }\n        return result;\n    }\n\n    const myClick = event => {\n        debugger\n        dispatch(setFilter(event.target.value));\n    }\n\n\n    return (\n        <form type=\"checkbox\" id=\"myCheck\" >\n            <select id=\"select_\" onChange={myClick} >\n                {uniqueItem(filter).map(item => (\n                    <option   >{item}</option>\n                ))}\n            </select>\n        </form >\n    );\n}\n\nexport default FilterTable;\n\n"]},"metadata":{},"sourceType":"module"}