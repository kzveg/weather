{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CityWeather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CityList from './CitysList';\nimport { citys } from '../mock-items.js/sitys';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport weatherCityId from './CitysList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CityWeather() {\n  _s();\n\n  let items = useSelector(state => state.sitys);\n  const dispatch = useDispatch();\n  console.log(items);\n  const [show, setShow] = useState(true);\n  const [dataCity, setDataCity] = useState(items);\n\n  function showCitys() {\n    dispatch({\n      typeof: \"STATE\"\n    }); // setDataCity(dataCity);\n    // setShow(!show)\n  } // function deleteCity() {\n  //     for (let i of citys) {\n  //         if (i.id === items.id) {\n  //             citys.splice(citys.indexOf(i), 1);\n  //         }\n  //     }\n  //     showCitys();\n  // }\n\n\n  function deleteCity() {\n    dispatch({\n      type: 'DELETE_CITY',\n      payload: {\n        id: items[0].id\n      }\n    });\n    console.log(items[0].id);\n    setShow(!show);\n  }\n\n  let showCard = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CityList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 20\n  }, this);\n\n  let dataCard = items.filter(el => el.id === weatherCityId);\n  console.log(dataCard);\n\n  if (show) {\n    showCard = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showcity\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: () => showCitys(),\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showcity-name\",\n        children: [/*#__PURE__*/_jsxDEV(AutorenewIcon, {\n          sx: {\n            fontSize: 30\n          },\n          onClick: () => console.log('update'),\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), dataCard.city, /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          color: \"warning\",\n          sx: {\n            fontSize: 40\n          },\n          onClick: () => deleteCity(),\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showcity-description\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ul\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" temp - \", dataCard.temp, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"tempMax - \", dataCard.tempMax]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" tempMin - \", dataCard.tempMin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" description - \", dataCard.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"windSpeed - \", dataCard.windSpeed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"windGust - \", dataCard.windGust]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"humidity - \", dataCard.humidity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" pressure - \", dataCard.pressure]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showCard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CityWeather, \"0bLAUT7jxmkRSVIcNUE1amGU82w=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CityWeather;\nexport default CityWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityWeather\");","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CityWeather.js"],"names":["React","useState","CityList","citys","AutorenewIcon","DeleteForeverIcon","CloseIcon","useSelector","useDispatch","weatherCityId","CityWeather","items","state","sitys","dispatch","console","log","show","setShow","dataCity","setDataCity","showCitys","typeof","deleteCity","type","payload","id","showCard","dataCard","filter","el","fontSize","city","temp","tempMax","tempMin","description","windSpeed","windGust","humidity","pressure"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport CityList from './CitysList'\nimport { citys } from '../mock-items.js/sitys'\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport weatherCityId from './CitysList';\n\n\nfunction CityWeather() {\n\n    let items = useSelector((state) => state.sitys)\n    const dispatch = useDispatch()\n    console.log(items);\n\n    const [show, setShow] = useState(true)\n    const [dataCity, setDataCity] = useState(items)\n\n    function showCitys() {\n        dispatch({\n            typeof: \"STATE\"\n        })\n        // setDataCity(dataCity);\n        // setShow(!show)\n    }\n\n    // function deleteCity() {\n    //     for (let i of citys) {\n    //         if (i.id === items.id) {\n    //             citys.splice(citys.indexOf(i), 1);\n    //         }\n    //     }\n    //     showCitys();\n    // }\n\n    function deleteCity() {\n        dispatch({\n            type: 'DELETE_CITY',\n            payload: {\n                id: items[0].id\n            }\n        })\n        console.log(items[0].id);\n        setShow(!show)\n    }\n\n    let showCard = <div><CityList /></div>\n    let dataCard = items.filter(el => el.id === weatherCityId)\n    console.log(dataCard);\n\n    if (show) {\n        showCard =\n            <div className='showcity'>\n                <div className='close'><CloseIcon onClick={() => showCitys()} cursor='pointer' /></div>\n                <div className='showcity-name'>\n                    < AutorenewIcon sx={{ fontSize: 30 }} onClick={() => console.log('update')} cursor='pointer' />\n                    {dataCard.city}\n                    <DeleteForeverIcon color=\"warning\" sx={{ fontSize: 40 }} onClick={() => deleteCity()} cursor='pointer' />\n                </div>\n                <div className='showcity-description'>\n                    <ul className='ul'>\n                        <li> temp - {dataCard.temp} </li>\n                        <li>tempMax - {dataCard.tempMax}</li>\n                        <li> tempMin - {dataCard.tempMin}</li>\n                        <li> description - {dataCard.description}</li>\n                        <li>windSpeed - {dataCard.windSpeed}</li>\n                        <li>windGust - {dataCard.windGust}</li>\n                        <li>humidity - {dataCard.humidity}</li>\n                        <li> pressure - {dataCard.pressure}</li>\n                    </ul>\n                </div>\n            </div>\n    }\n\n    return (\n        <div >{showCard}</div>\n    )\n}\n\n\nexport default CityWeather;"]},"metadata":{},"sourceType":"module"}