{"ast":null,"code":"import { GET_FIRST_DATA, ADD_CITY, DELETE_CITY, UPDATE_CITY } from './actions';\nconst initialState = [];\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Kharkiv&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc').then(response => response.json()).then(data => dispatch({\n  type: 'ADD_CITY',\n  payload: {\n    data: data\n  }\n}));\nexport const citysReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CITY:\n      {\n        const item = action.payload;\n        return [...state, item];\n      }\n\n    case DELETE_CITY:\n      {\n        const id = action.payload;\n        return [...state.filter(el => el.data.id !== id)];\n      }\n\n    case GET_FIRST_DATA:\n      return {\n        data: action.payload.data\n      };\n\n    case UPDATE_CITY:\n      {\n        const id = action.payload.id;\n        const data = action.payload.data;\n        return [...state.filter(el => el.id !== id), data];\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/redux/reducer.js"],"names":["GET_FIRST_DATA","ADD_CITY","DELETE_CITY","UPDATE_CITY","initialState","fetch","then","response","json","data","dispatch","type","payload","citysReducer","state","action","item","id","filter","el"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,QAAzB,EAAmCC,WAAnC,EAAgDC,WAAhD,QAAmE,WAAnE;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEAC,KAAK,CAAC,+GAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIC,QAAQ,CAAC;AACnBC,EAAAA,IAAI,EAAE,UADa;AAEnBC,EAAAA,OAAO,EAAE;AAAEH,IAAAA,IAAI,EAAEA;AAAR;AAFU,CAAD,CAF1B;AAUA,OAAO,MAAMI,YAAY,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKV,QAAL;AAAe;AACX,cAAMe,IAAI,GAAGD,MAAM,CAACH,OAApB;AACA,eAAO,CAAC,GAAGE,KAAJ,EAAWE,IAAX,CAAP;AACH;;AACD,SAAKd,WAAL;AAAkB;AACd,cAAMe,EAAE,GAAGF,MAAM,CAACH,OAAlB;AACA,eAAO,CAAC,GAAGE,KAAK,CAACI,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACV,IAAH,CAAQQ,EAAR,KAAeA,EAAlC,CAAJ,CAAP;AACH;;AACD,SAAKjB,cAAL;AACI,aAAO;AACHS,QAAAA,IAAI,EAAEM,MAAM,CAACH,OAAP,CAAeH;AADlB,OAAP;;AAGJ,SAAKN,WAAL;AAAkB;AACd,cAAMc,EAAE,GAAGF,MAAM,CAACH,OAAP,CAAeK,EAA1B;AACA,cAAMR,IAAI,GAAGM,MAAM,CAACH,OAAP,CAAeH,IAA5B;AACA,eAAO,CAAC,GAAGK,KAAK,CAACI,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACF,EAAH,KAAUA,EAA7B,CAAJ,EAAsCR,IAAtC,CAAP;AACH;;AACD;AACI,aAAOK,KAAP;AAnBR;AAqBH,CAtBM","sourcesContent":["import { GET_FIRST_DATA, ADD_CITY, DELETE_CITY, UPDATE_CITY } from './actions';\n\nconst initialState = []\n\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Kharkiv&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc')\n    .then(response => response.json())\n    .then(data => dispatch({\n        type: 'ADD_CITY',\n        payload: { data: data }\n    }))\n\n\n\n\nexport const citysReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CITY: {\n            const item = action.payload\n            return [...state, item]\n        }\n        case DELETE_CITY: {\n            const id = action.payload\n            return [...state.filter(el => el.data.id !== id)]\n        }\n        case GET_FIRST_DATA:\n            return {\n                data: action.payload.data,\n            }\n        case UPDATE_CITY: {\n            const id = action.payload.id\n            const data = action.payload.data\n            return [...state.filter(el => el.id !== id), data]\n        }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}