{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CitysList.js\",\n    _s = $RefreshSig$();\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getFirstData } from '../redux/actions';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CityList() {\n  _s();\n\n  let idNum = uuid();\n  let items = useSelector(state => state.citys);\n  console.log(items);\n  let content;\n  const [weather, setWeather] = useState(true); // what we rendering\n\n  const [dataCity, setDataCity] = useState([]); // what city open to show full weather\n\n  console.log(dataCity);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getFirstData();\n  }, []);\n  let card = items.map(el => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 280\n    },\n    onClick: () => showWeather(el),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        alt: \"weather\",\n        height: \"140\",\n        src: \"https://t3.ftcdn.net/jpg/02/11/52/42/360_F_211524227_Ett8aboQvVnROAFtqu3S1pW99Y3Th9vm.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h3\",\n          component: \"div\",\n          children: el.data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"div\",\n          children: [\"\\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430 \\u0432\\u043E\\u0437\\u0434\\u0443\\u0445\\u0430: \", Math.floor(el.data.main.temp), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), \"\\u0441\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0432\\u0435\\u0442\\u0440\\u0430: \", el.data.wind.speed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this));\n\n  function deleteCity() {\n    dispatch({\n      type: 'DELETE_CITY',\n      payload: dataCity.id\n    });\n    console.log(dataCity.id);\n    showCitys();\n  }\n\n  function showCitys() {\n    console.log('show');\n    setWeather(!weather);\n  }\n\n  function showWeather(el) {\n    if (el.data.weather[0].icon === \"01d\") {\n      backgroundIcon = 'one';\n    }\n\n    if (el.data.weather[0].icon === \"02d\") {\n      backgroundIcon = 'two';\n    }\n\n    setDataCity(el);\n    setWeather(!weather);\n  }\n\n  function getFirstData() {\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=Kharkiv&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc').then(response => response.json()).then(data => dispatch({\n      type: 'ADD_CITY',\n      payload: {\n        data: data,\n        id: idNum\n      }\n    }));\n  }\n\n  let backgroundIcon = 'a';\n  weather ? content = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"citys\",\n    children: [\" \", card, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 19\n  }, this) : content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showcity\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: backgroundIcon,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"close\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            onClick: () => showCitys(),\n            cursor: \"pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showcity-name\",\n          children: [/*#__PURE__*/_jsxDEV(AutorenewIcon, {\n            sx: {\n              fontSize: 30\n            },\n            onClick: () => console.log('update'),\n            cursor: \"pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), dataCity.data.name, /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n            color: \"warning\",\n            sx: {\n              fontSize: 40\n            },\n            onClick: () => deleteCity(),\n            cursor: \"pointer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"showcity-description\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"ul\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430: \", Math.floor(dataCity.data.main.temp), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430(Max): \", Math.floor(dataCity.data.main.temp_max)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430(Min): \", Math.floor(dataCity.data.main.temp_min)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", dataCity.data.weather[0].description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u0441\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0432\\u0435\\u0442\\u0440\\u0430: \", dataCity.data.wind.speed]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u0432\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C: \", dataCity.data.main.humidity]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \\u0434\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435: \", dataCity.data.main.pressure]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CityList, \"3OhZnL4GCCnkTvIIUoRdK2xcAhQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CityList;\nexport default CityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CitysList.js"],"names":["Card","CardActions","CardContent","CardMedia","Typography","useEffect","useState","useSelector","useDispatch","getFirstData","CloseIcon","AutorenewIcon","DeleteForeverIcon","v4","uuid","CityList","idNum","items","state","citys","console","log","content","weather","setWeather","dataCity","setDataCity","dispatch","card","map","el","maxWidth","showWeather","data","name","Math","floor","main","temp","wind","speed","deleteCity","type","payload","id","showCitys","icon","backgroundIcon","fetch","then","response","json","fontSize","temp_max","temp_min","description","humidity","pressure"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;;;AAMA,SAASC,QAAT,GAAoB;AAAA;;AAChB,MAAIC,KAAK,GAAGF,IAAI,EAAhB;AACA,MAAIG,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,MAAIK,OAAJ;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC,CANgB,CAM6B;;AAC7C,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC,CAPgB,CAO6B;;AAE7Cc,EAAAA,OAAO,CAACC,GAAR,CAAYI,QAAZ;AACA,QAAME,QAAQ,GAAGnB,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAKA,MAAImB,IAAI,GAAGX,KAAK,CAACY,GAAN,CAAUC,EAAE,iBACnB,QAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV;AAA6B,IAAA,OAAO,EAAE,MAAMC,WAAW,CAACF,EAAD,CAAvD;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI,QAAC,SAAD;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,GAAG,EAAC,SAFR;AAGI,QAAA,MAAM,EAAC,KAHX;AAII,QAAA,GAAG,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,WAAD;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAsC,UAAA,SAAS,EAAC,KAAhD;AAAA,oBACKA,EAAE,CAACG,IAAH,CAAQC;AADb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,UAAD;AAAY,UAAA,YAAY,MAAxB;AAAyB,UAAA,OAAO,EAAC,IAAjC;AAAsC,UAAA,SAAS,EAAC,KAAhD;AAAA,wIAC0BC,IAAI,CAACC,KAAL,CAAWN,EAAE,CAACG,IAAH,CAAQI,IAAR,CAAaC,IAAxB,CAD1B,eAEI;AAAA;AAAA;AAAA;AAAA,kBAFJ,uFAGqBR,EAAE,CAACG,IAAH,CAAQM,IAAR,CAAaC,KAHlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADO,CAAX;;AAsBA,WAASC,UAAT,GAAsB;AAClBd,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAElB,QAAQ,CAACmB;AAFb,KAAD,CAAR;AAIAxB,IAAAA,OAAO,CAACC,GAAR,CAAYI,QAAQ,CAACmB,EAArB;AACAC,IAAAA,SAAS;AACZ;;AACD,WAASA,SAAT,GAAqB;AACjBzB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAG,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH;;AAED,WAASS,WAAT,CAAqBF,EAArB,EAAyB;AACrB,QAAIA,EAAE,CAACG,IAAH,CAAQV,OAAR,CAAgB,CAAhB,EAAmBuB,IAAnB,KAA4B,KAAhC,EAAuC;AACnCC,MAAAA,cAAc,GAAG,KAAjB;AACH;;AACD,QAAIjB,EAAE,CAACG,IAAH,CAAQV,OAAR,CAAgB,CAAhB,EAAmBuB,IAAnB,KAA4B,KAAhC,EAAuC;AACnCC,MAAAA,cAAc,GAAG,KAAjB;AACH;;AAEDrB,IAAAA,WAAW,CAACI,EAAD,CAAX;AACAN,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH;;AAED,WAASd,YAAT,GAAwB;AACpBuC,IAAAA,KAAK,CAAC,+GAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUhB,IAAI,IAAIN,QAAQ,CAAC;AACnBe,MAAAA,IAAI,EAAE,UADa;AAEnBC,MAAAA,OAAO,EAAE;AAAEV,QAAAA,IAAI,EAAEA,IAAR;AAAcW,QAAAA,EAAE,EAAE5B;AAAlB;AAFU,KAAD,CAF1B;AAMH;;AAED,MAAI+B,cAAc,GAAG,GAArB;AACAxB,EAAAA,OAAO,GACHD,OAAO,gBAAG;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA,oBAA2BM,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,UADP,GAEHN,OAAO,gBAAG;AAAA,2BACN;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAEyB,cAAhB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCAAuB,QAAC,SAAD;AAAW,YAAA,OAAO,EAAE,MAAMF,SAAS,EAAnC;AAAuC,YAAA,MAAM,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI,QAAE,aAAF;AAAgB,YAAA,EAAE,EAAE;AAAEO,cAAAA,QAAQ,EAAE;AAAZ,aAApB;AAAsC,YAAA,OAAO,EAAE,MAAMhC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAArD;AAA4E,YAAA,MAAM,EAAC;AAAnF;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKI,QAAQ,CAACQ,IAAT,CAAcC,IAFnB,eAGI,QAAC,iBAAD;AAAmB,YAAA,KAAK,EAAC,SAAzB;AAAmC,YAAA,EAAE,EAAE;AAAEkB,cAAAA,QAAQ,EAAE;AAAZ,aAAvC;AAAyD,YAAA,OAAO,EAAE,MAAMX,UAAU,EAAlF;AAAsF,YAAA,MAAM,EAAC;AAA7F;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAOI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,IAAd;AAAA,oCACI;AAAA,kGAAmBN,IAAI,CAACC,KAAL,CAAWX,QAAQ,CAACQ,IAAT,CAAcI,IAAd,CAAmBC,IAA9B,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,sGAAuBH,IAAI,CAACC,KAAL,CAAWX,QAAQ,CAACQ,IAAT,CAAcI,IAAd,CAAmBgB,QAA9B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,uGAAwBlB,IAAI,CAACC,KAAL,CAAWX,QAAQ,CAACQ,IAAT,CAAcI,IAAd,CAAmBiB,QAA9B,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA,gFAAgB7B,QAAQ,CAACQ,IAAT,CAAcV,OAAd,CAAsB,CAAtB,EAAyBgC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA,8GAAqB9B,QAAQ,CAACQ,IAAT,CAAcM,IAAd,CAAmBC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA,qFAAgBf,QAAQ,CAACQ,IAAT,CAAcI,IAAd,CAAmBmB,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,eAOI;AAAA,gFAAgB/B,QAAQ,CAACQ,IAAT,CAAcI,IAAd,CAAmBoB,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,UAFd;AA4BA,sBACI;AAAA,cAAOnC;AAAP;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;GA1GQP,Q;UAEOR,W,EAQKC,W;;;KAVZO,Q;AA8GT,eAAeA,QAAf","sourcesContent":["import Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getFirstData } from '../redux/actions';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { v4 as uuid } from 'uuid';\n\n\n\n\n\nfunction CityList() {\n    let idNum = uuid()\n    let items = useSelector((state) => state.citys)\n    console.log(items);\n\n    let content\n    const [weather, setWeather] = useState(true) // what we rendering\n    const [dataCity, setDataCity] = useState([]) // what city open to show full weather\n\n    console.log(dataCity);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        getFirstData()\n    }, [])\n\n\n    let card = items.map(el =>\n        <Card sx={{ maxWidth: 280 }} onClick={() => showWeather(el)}>\n            <div className=\"cardWrapper\" >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"weather\"\n                    height=\"140\"\n                    src=\"https://t3.ftcdn.net/jpg/02/11/52/42/360_F_211524227_Ett8aboQvVnROAFtqu3S1pW99Y3Th9vm.jpg\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h3\" component=\"div\">\n                        {el.data.name}\n                    </Typography>\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\n                        температура воздуха: {Math.floor(el.data.main.temp)}\n                        <br />\n                        скорость ветра: {el.data.wind.speed}\n                    </Typography>\n                </CardContent>\n            </div>\n        </Card >)\n\n    function deleteCity() {\n        dispatch({\n            type: 'DELETE_CITY',\n            payload: dataCity.id\n        })\n        console.log(dataCity.id);\n        showCitys()\n    }\n    function showCitys() {\n        console.log('show');\n        setWeather(!weather)\n    }\n\n    function showWeather(el) {\n        if (el.data.weather[0].icon === \"01d\") {\n            backgroundIcon = 'one'\n        }\n        if (el.data.weather[0].icon === \"02d\") {\n            backgroundIcon = 'two'\n        }\n\n        setDataCity(el)\n        setWeather(!weather)\n    }\n\n    function getFirstData() {\n        fetch('https://api.openweathermap.org/data/2.5/weather?q=Kharkiv&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc')\n            .then(response => response.json())\n            .then(data => dispatch({\n                type: 'ADD_CITY',\n                payload: { data: data, id: idNum }\n            }))\n    }\n\n    let backgroundIcon = 'a'\n    weather ?\n        content = < div className='citys' > {card} </div > :\n        content = < div >\n            <div className='showcity'>\n                <div className={backgroundIcon}>\n                    <div className='close'><CloseIcon onClick={() => showCitys()} cursor='pointer' /></div>\n                    <div className='showcity-name'>\n                        < AutorenewIcon sx={{ fontSize: 30 }} onClick={() => console.log('update')} cursor='pointer' />\n                        {dataCity.data.name}\n                        <DeleteForeverIcon color=\"warning\" sx={{ fontSize: 40 }} onClick={() => deleteCity()} cursor='pointer' />\n                    </div>\n                    <div className='showcity-description'>\n                        <ul className='ul'>\n                            <li> температура: {Math.floor(dataCity.data.main.temp)} </li>\n                            <li>температура(Max): {Math.floor(dataCity.data.main.temp_max)}</li>\n                            <li> температура(Min): {Math.floor(dataCity.data.main.temp_min)}</li>\n                            <li> описание: {dataCity.data.weather[0].description}</li>\n                            <li>скорость ветра: {dataCity.data.wind.speed}</li>\n                            <li>влажность: {dataCity.data.main.humidity}</li>\n                            <li> давление: {dataCity.data.main.pressure}</li>\n                        </ul>\n                    </div>\n                </div>\n\n            </div>\n        </div >\n\n\n    return (\n        <div >{content}</div>\n    )\n\n}\n\n\n\nexport default CityList;"]},"metadata":{},"sourceType":"module"}