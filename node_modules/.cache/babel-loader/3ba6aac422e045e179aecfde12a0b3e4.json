{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CitysList.js\",\n    _s = $RefreshSig$();\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getFirstData } from '../redux/actions';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever'; // import { v4 as uuid } from 'uuid';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CityList() {\n  _s();\n\n  // let idNum = uuid()\n  let items = useSelector(state => state.citys);\n  console.log(items);\n  let content;\n  const [weather, setWeather] = useState(true); // what we rendering\n\n  const [dataCity, setDataCity] = useState([]); // what city open to show full weather\n\n  const [stateitem, useStateItem] = useSelector(items);\n  useStateItem(stateitem);\n  console.log(dataCity);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    getFirstData();\n  }, []); // useEffect(() => {\n  //     updateWeather()\n  // }, [updateWeather])\n\n  let card = items.map(el => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 280\n    },\n    onClick: () => showWeather(el),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        alt: \"weather\",\n        height: \"140\",\n        src: \"https://t3.ftcdn.net/jpg/02/11/52/42/360_F_211524227_Ett8aboQvVnROAFtqu3S1pW99Y3Th9vm.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h3\",\n          component: \"div\",\n          children: el.data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"div\",\n          children: [\"\\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430 \\u0432\\u043E\\u0437\\u0434\\u0443\\u0445\\u0430: \", Math.floor(el.data.main.temp), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), \"\\u0441\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0432\\u0435\\u0442\\u0440\\u0430: \", el.data.wind.speed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this));\n\n  function updateWeather(el) {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${el.data.name}&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc`).then(response => response.json()).then(data => dispatch({\n      type: 'UPDATE_CITY',\n      payload: {\n        data: data.data\n      }\n    })); // console.log(el.data.name);\n    // console.log(el.data.id);\n    // console.log(el.data);\n  }\n\n  function deleteCity() {\n    dispatch({\n      type: 'DELETE_CITY',\n      payload: dataCity.id\n    });\n    console.log(dataCity.id);\n    showCitys();\n  }\n\n  function showCitys() {\n    console.log('show');\n    setWeather(!weather);\n  }\n\n  function showWeather(el) {\n    console.log(el.data.weather[0].icon);\n    setDataCity(el);\n    setWeather(!weather);\n  }\n\n  function getFirstData() {\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=Kharkiv&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc').then(response => response.json()).then(data => dispatch({\n      type: 'ADD_CITY',\n      payload: {\n        data: data\n      }\n    }));\n  }\n\n  weather ? content = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"citys\",\n    children: [\" \", card, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 19\n  }, this) : content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showcity\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: () => showCitys(),\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showcity-name\",\n        children: [/*#__PURE__*/_jsxDEV(AutorenewIcon, {\n          sx: {\n            fontSize: 30\n          },\n          onClick: () => updateWeather(dataCity),\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), dataCity.data.name, /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          color: \"warning\",\n          sx: {\n            fontSize: 40\n          },\n          onClick: () => deleteCity(),\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showcity-description\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ul\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430: \", Math.floor(dataCity.data.main.temp), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430(Max): \", Math.floor(dataCity.data.main.temp_max)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430(Min): \", Math.floor(dataCity.data.main.temp_min)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \\u043E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", dataCity.data.weather[0].description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u0441\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0432\\u0435\\u0442\\u0440\\u0430: \", dataCity.data.wind.speed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u0432\\u043B\\u0430\\u0436\\u043D\\u043E\\u0441\\u0442\\u044C: \", dataCity.data.main.humidity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \\u0434\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435: \", dataCity.data.main.pressure]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://cdn.dribbble.com/users/1353252/screenshots/7430583/media/f456446ffc1c9a1608b94d6d136dbc0d.gif\",\n            alt: \"icon\",\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CityList, \"1iiIHVDg2kKjkSH2Ox/vt164WnA=\", false, function () {\n  return [useSelector, useSelector, useStateItem, useDispatch];\n});\n\n_c = CityList;\nexport default CityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CitysList.js"],"names":["Card","CardActions","CardContent","CardMedia","Typography","useEffect","useState","useSelector","useDispatch","getFirstData","CloseIcon","AutorenewIcon","DeleteForeverIcon","CityList","items","state","citys","console","log","content","weather","setWeather","dataCity","setDataCity","stateitem","useStateItem","dispatch","card","map","el","maxWidth","showWeather","data","name","Math","floor","main","temp","wind","speed","updateWeather","fetch","then","response","json","type","payload","deleteCity","id","showCitys","icon","fontSize","temp_max","temp_min","description","humidity","pressure"],"mappings":"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","sourcesContent":["import Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { getFirstData } from '../redux/actions';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n// import { v4 as uuid } from 'uuid';\n\n\n\n\n\nfunction CityList() {\n    // let idNum = uuid()\n    let items = useSelector((state) => state.citys)\n    console.log(items);\n\n    let content\n    const [weather, setWeather] = useState(true) // what we rendering\n    const [dataCity, setDataCity] = useState([]) // what city open to show full weather\n    const [stateitem, useStateItem] = useSelector(items)\n\n    useStateItem(stateitem);\n\n    console.log(dataCity);\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        getFirstData()\n    }, [])\n\n    // useEffect(() => {\n    //     updateWeather()\n    // }, [updateWeather])\n\n\n\n    let card = items.map(el =>\n        <Card sx={{ maxWidth: 280 }} onClick={() => showWeather(el)}>\n            <div className=\"cardWrapper\" >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"weather\"\n                    height=\"140\"\n                    src=\"https://t3.ftcdn.net/jpg/02/11/52/42/360_F_211524227_Ett8aboQvVnROAFtqu3S1pW99Y3Th9vm.jpg\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h3\" component=\"div\">\n                        {el.data.name}\n                    </Typography>\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\n                        температура воздуха: {Math.floor(el.data.main.temp)}\n                        <br />\n                        скорость ветра: {el.data.wind.speed}\n                    </Typography>\n                </CardContent>\n            </div>\n        </Card >)\n\n    function updateWeather(el) {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${el.data.name}&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc`)\n            .then(response => response.json())\n            .then(data => dispatch({\n                type: 'UPDATE_CITY',\n                payload: { data: data.data }\n            }))\n        // console.log(el.data.name);\n        // console.log(el.data.id);\n        // console.log(el.data);\n    }\n\n    function deleteCity() {\n        dispatch({\n            type: 'DELETE_CITY',\n            payload: dataCity.id\n        })\n        console.log(dataCity.id);\n        showCitys()\n    }\n    function showCitys() {\n        console.log('show');\n        setWeather(!weather)\n    }\n\n    function showWeather(el) {\n        console.log(el.data.weather[0].icon);\n        setDataCity(el)\n        setWeather(!weather)\n    }\n\n    function getFirstData() {\n        fetch('https://api.openweathermap.org/data/2.5/weather?q=Kharkiv&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc')\n            .then(response => response.json())\n            .then(data => dispatch({\n                type: 'ADD_CITY',\n                payload: { data: data }\n            }))\n\n    }\n\n    weather ?\n        content = < div className='citys' > {card} </div > :\n        content = < div >\n            <div className='showcity'>\n                <div className='close'><CloseIcon onClick={() => showCitys()} cursor='pointer' /></div>\n                <div className='showcity-name'>\n                    < AutorenewIcon sx={{ fontSize: 30 }} onClick={() => updateWeather(dataCity)} cursor='pointer' />\n                    {dataCity.data.name}\n                    <DeleteForeverIcon color=\"warning\" sx={{ fontSize: 40 }} onClick={() => deleteCity()} cursor='pointer' />\n                </div>\n                <div className='showcity-description'>\n                    <ul className='ul'>\n                        <li> температура: {Math.floor(dataCity.data.main.temp)} </li>\n                        <li>температура(Max): {Math.floor(dataCity.data.main.temp_max)}</li>\n                        <li> температура(Min): {Math.floor(dataCity.data.main.temp_min)}</li>\n                        <li> описание: {dataCity.data.weather[0].description}</li>\n                        <li>скорость ветра: {dataCity.data.wind.speed}</li>\n                        <li>влажность: {dataCity.data.main.humidity}</li>\n                        <li> давление: {dataCity.data.main.pressure}</li>\n                        <img src='https://cdn.dribbble.com/users/1353252/screenshots/7430583/media/f456446ffc1c9a1608b94d6d136dbc0d.gif' alt=\"icon\" className='icon' />\n                    </ul>\n                </div>\n            </div>\n        </div >\n\n\n    return (\n        <div >{content}</div>\n    )\n\n}\n\n\n\nexport default CityList;"]},"metadata":{},"sourceType":"module"}