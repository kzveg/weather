{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CitysList.js\",\n    _s = $RefreshSig$();\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { citys } from '../mock-items.js/sitys';\nimport { getFirstData } from '../redux/actions';\nimport CityWeather from './CityWeather';\nimport { dataCard } from './CityWeather';\nimport CloseIcon from '@mui/icons-material/Close';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CityList() {\n  _s();\n\n  let weatherId;\n  const [weather, setWeather] = useState(true); // const [dataCity, setDataCity] = useState(items)\n\n  const dispatch = useDispatch();\n  let items = useSelector(state => state.sitys); // console.log(items.el.city);\n\n  console.log(items);\n  let card = items.map(el => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 200\n    },\n    onClick: () => showWeather(el),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        alt: \"weather\",\n        height: \"140\",\n        src: \"https://t3.ftcdn.net/jpg/02/11/52/42/360_F_211524227_Ett8aboQvVnROAFtqu3S1pW99Y3Th9vm.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h3\",\n          component: \"div\",\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          component: \"div\",\n          children: [el.temp, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), el.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this));\n\n  function deleteCity() {\n    dispatch({\n      type: 'DELETE_CITY',\n      payload: {\n        id: items[0].id\n      }\n    });\n    console.log(items[0].id); // setShow(!show)\n  }\n\n  function deleteCity() {\n    console.log('delete');\n  }\n\n  function showCitys() {\n    console.log('show');\n  }\n\n  function showWeather(el) {\n    console.log(el.id);\n    weatherId = el.id;\n    setWeather(!weather);\n  }\n\n  let currentCity = items.filter(el => el.id === weatherId);\n  console.log(currentCity);\n  weather ? content = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"citys\",\n    children: [\" \", card, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 19\n  }, this) : content = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showcity\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          onClick: () => showCitys(),\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showcity-name\",\n        children: [/*#__PURE__*/_jsxDEV(AutorenewIcon, {\n          sx: {\n            fontSize: 30\n          },\n          onClick: () => console.log('update'),\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), currentCity.name, /*#__PURE__*/_jsxDEV(DeleteForeverIcon, {\n          color: \"warning\",\n          sx: {\n            fontSize: 40\n          },\n          onClick: () => deleteCity(),\n          cursor: \"pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"showcity-description\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"ul\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" temp - \", currentCity.temp, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"tempMax - \", currentCity.tempMax]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" tempMin - \", currentCity.tempMin]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" description - \", currentCity.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"windSpeed - \", currentCity.windSpeed]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"windGust - \", currentCity.windGust]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"humidity - \", currentCity.humidity]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" pressure - \", currentCity.pressure]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 19\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CityList, \"TLsbqIh16y+BuliPwuz/GbhSekI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CityList;\nexport default CityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityList\");","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/components/CitysList.js"],"names":["Card","CardActions","CardContent","CardMedia","Typography","useEffect","useState","useSelector","useDispatch","citys","getFirstData","CityWeather","dataCard","CloseIcon","AutorenewIcon","DeleteForeverIcon","CityList","weatherId","weather","setWeather","dispatch","items","state","sitys","console","log","card","map","el","maxWidth","showWeather","name","temp","description","deleteCity","type","payload","id","showCitys","currentCity","filter","content","fontSize","tempMax","tempMin","windSpeed","windGust","humidity","pressure"],"mappings":"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","sourcesContent":["import Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { citys } from '../mock-items.js/sitys';\nimport { getFirstData } from '../redux/actions';\nimport CityWeather from './CityWeather';\nimport { dataCard } from './CityWeather'\nimport CloseIcon from '@mui/icons-material/Close';\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\n\n\n\n\n\nfunction CityList() {\n    let weatherId\n    const [weather, setWeather] = useState(true)\n    // const [dataCity, setDataCity] = useState(items)\n\n    const dispatch = useDispatch()\n\n    let items = useSelector((state) => state.sitys)\n    // console.log(items.el.city);\n    console.log(items);\n\n\n\n\n    let card = items.map(el =>\n        <Card sx={{ maxWidth: 200 }} onClick={() => showWeather(el)}>\n            <div className=\"cardWrapper\" >\n                <CardMedia\n                    component=\"img\"\n                    alt=\"weather\"\n                    height=\"140\"\n                    src=\"https://t3.ftcdn.net/jpg/02/11/52/42/360_F_211524227_Ett8aboQvVnROAFtqu3S1pW99Y3Th9vm.jpg\"\n                />\n                <CardContent>\n                    <Typography gutterBottom variant=\"h3\" component=\"div\">\n                        {el.name}\n\n                    </Typography>\n                    <Typography gutterBottom variant=\"h6\" component=\"div\">\n                        {el.temp}\n                        <br />\n                        {el.description}\n                    </Typography>\n                </CardContent>\n            </div>\n        </Card >)\n\n    function deleteCity() {\n        dispatch({\n            type: 'DELETE_CITY',\n            payload: {\n                id: items[0].id\n            }\n        })\n        console.log(items[0].id);\n        // setShow(!show)\n    }\n\n    function deleteCity() {\n        console.log('delete');\n    }\n    function showCitys() {\n        console.log('show');\n    }\n\n    function showWeather(el) {\n        console.log(el.id);\n        weatherId = el.id;\n\n        setWeather(!weather)\n    }\n\n    let currentCity = items.filter(el => el.id === weatherId);\n    console.log(currentCity);\n\n\n\n    weather ?\n        content = < div className='citys' > {card} </div > :\n        content = < div >\n            <div className='showcity'>\n                <div className='close'><CloseIcon onClick={() => showCitys()} cursor='pointer' /></div>\n                <div className='showcity-name'>\n                    < AutorenewIcon sx={{ fontSize: 30 }} onClick={() => console.log('update')} cursor='pointer' />\n                    {currentCity.name}\n                    <DeleteForeverIcon color=\"warning\" sx={{ fontSize: 40 }} onClick={() => deleteCity()} cursor='pointer' />\n                </div>\n                <div className='showcity-description'>\n                    <ul className='ul'>\n                        <li> temp - {currentCity.temp} </li>\n                        <li>tempMax - {currentCity.tempMax}</li>\n                        <li> tempMin - {currentCity.tempMin}</li>\n                        <li> description - {currentCity.description}</li>\n                        <li>windSpeed - {currentCity.windSpeed}</li>\n                        <li>windGust - {currentCity.windGust}</li>\n                        <li>humidity - {currentCity.humidity}</li>\n                        <li> pressure - {currentCity.pressure}</li>\n                    </ul>\n                </div>\n            </div>\n        </div >\n\n\n    return (\n        <div >{content}</div>\n    )\n\n}\n\n\n\nexport default CityList;"]},"metadata":{},"sourceType":"module"}