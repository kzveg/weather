{"ast":null,"code":"import { createTransform } from 'redux-persist';\nconst SetTransform = createTransform( // transform state on its way to being serialized and persisted.\n_c = (inboundState, key) => {\n  // convert mySet to an Array.\n  return { ...inboundState,\n    mySet: [...inboundState.mySet]\n  };\n}, // transform state being rehydrated\n(outboundState, key) => {\n  // convert mySet back to a Set.\n  return { ...outboundState,\n    mySet: new Set(outboundState.mySet)\n  };\n}, // define which reducers this transform gets called for.\n{\n  whitelist: ['someReducer']\n});\n_c2 = SetTransform;\nexport default SetTransform;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SetTransform$createTransform\");\n$RefreshReg$(_c2, \"SetTransform\");","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/app/transforms.js"],"names":["createTransform","SetTransform","inboundState","key","mySet","outboundState","Set","whitelist"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AAGA,MAAMC,YAAY,GAAGD,eAAe,EAChC;AADgC,KAEhC,CAACE,YAAD,EAAeC,GAAf,KAAuB;AACnB;AACA,SAAO,EAAE,GAAGD,YAAL;AAAmBE,IAAAA,KAAK,EAAE,CAAC,GAAGF,YAAY,CAACE,KAAjB;AAA1B,GAAP;AACH,CAL+B,EAMhC;AACA,CAACC,aAAD,EAAgBF,GAAhB,KAAwB;AACpB;AACA,SAAO,EAAE,GAAGE,aAAL;AAAoBD,IAAAA,KAAK,EAAE,IAAIE,GAAJ,CAAQD,aAAa,CAACD,KAAtB;AAA3B,GAAP;AACH,CAV+B,EAWhC;AACA;AAAEG,EAAAA,SAAS,EAAE,CAAC,aAAD;AAAb,CAZgC,CAApC;MAAMN,Y;AAeN,eAAeA,YAAf","sourcesContent":["import { createTransform } from 'redux-persist';\n\n\nconst SetTransform = createTransform(\n    // transform state on its way to being serialized and persisted.\n    (inboundState, key) => {\n        // convert mySet to an Array.\n        return { ...inboundState, mySet: [...inboundState.mySet] };\n    },\n    // transform state being rehydrated\n    (outboundState, key) => {\n        // convert mySet back to a Set.\n        return { ...outboundState, mySet: new Set(outboundState.mySet) };\n    },\n    // define which reducers this transform gets called for.\n    { whitelist: ['someReducer'] }\n);\n\nexport default SetTransform;\n"]},"metadata":{},"sourceType":"module"}