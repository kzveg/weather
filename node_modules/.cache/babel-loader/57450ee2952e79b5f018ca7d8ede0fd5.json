{"ast":null,"code":"var _jsxFileName = \"/Users/kostya/projects/Redux/codica/newCityWeather/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CityList from \"./components/CitysList\";\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    addCity();\n  }, []);\n\n  function addCity() {\n    let json = require('./city.list.json');\n\n    let cityNameValue = input;\n    const rez = JSON.parse(JSON.stringify(json));\n    let resp = rez.filter(el => el.name.toLowerCase() === cityNameValue.toLowerCase());\n\n    if (resp[0] != undefined) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityNameValue}&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc`).then(response => response.json()).then(data => dispatch({\n        type: 'ADD_CITY',\n        payload: {\n          data: data\n        }\n      }));\n    } else alert('Извините, но такого города в нашей базе нет');\n\n    setInput('');\n  }\n\n  function handlyChange(event) {\n    setInput(event.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add city name\",\n        onChange: handlyChange,\n        value: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addCity(),\n        children: \"add city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CityList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Agw83TgRj/quE9EYRKJpc3ELYSk=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/App.js"],"names":["React","useEffect","useState","CityList","useSelector","useDispatch","App","dispatch","input","setInput","addCity","json","require","cityNameValue","rez","JSON","parse","stringify","resp","filter","el","name","toLowerCase","undefined","fetch","then","response","data","type","payload","alert","handlyChange","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,WAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAKA,WAASA,OAAT,GAAmB;AACjB,QAAIC,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,QAAIC,aAAa,GAAGL,KAApB;AACA,UAAMM,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,IAAf,CAAX,CAAZ;AACA,QAAIO,IAAI,GAAGJ,GAAG,CAACK,MAAJ,CAAWC,EAAE,IAAIA,EAAE,CAACC,IAAH,CAAQC,WAAR,OAA0BT,aAAa,CAACS,WAAd,EAA3C,CAAX;;AACA,QAAIJ,IAAI,CAAC,CAAD,CAAJ,IAAWK,SAAf,EAA0B;AACxBC,MAAAA,KAAK,CAAE,qDAAoDX,aAAc,sDAApE,CAAL,CACGY,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACf,IAAT,EADpB,EAEGc,IAFH,CAEQE,IAAI,IAAIpB,QAAQ,CAAC;AACrBqB,QAAAA,IAAI,EAAE,UADe;AAErBC,QAAAA,OAAO,EAAE;AAAEF,UAAAA,IAAI,EAAEA;AAAR;AAFY,OAAD,CAFxB;AAMD,KAPD,MAQKG,KAAK,CAAC,6CAAD,CAAL;;AACLrB,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;;AAED,WAASsB,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BvB,IAAAA,QAAQ,CAACuB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACD;;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,eAA/B;AAA+C,QAAA,QAAQ,EAAEH,YAAzD;AAAuE,QAAA,KAAK,EAAEvB;AAA9E;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAME,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,6BAAK,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1CQJ,G;UAEUD,W;;;KAFVC,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CityList from \"./components/CitysList\";\nimport './App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const [input, setInput] = useState('')\n\n  useEffect(() => {\n    addCity()\n  }, [])\n\n\n  function addCity() {\n    let json = require('./city.list.json');\n    let cityNameValue = input;\n    const rez = JSON.parse(JSON.stringify(json))\n    let resp = rez.filter(el => el.name.toLowerCase() === cityNameValue.toLowerCase())\n    if (resp[0] != undefined) {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityNameValue}&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc`)\n        .then(response => response.json())\n        .then(data => dispatch({\n          type: 'ADD_CITY',\n          payload: { data: data }\n        }))\n    }\n    else alert('Извините, но такого города в нашей базе нет');\n    setInput('')\n  }\n\n  function handlyChange(event) {\n    setInput(event.target.value);\n  }\n\n\n\n  return (\n    <div className='main'>\n      <div className='input'>\n        <input type=\"text\" placeholder='add city name' onChange={handlyChange} value={input} />\n        <button onClick={() => addCity()}>add city</button>\n      </div>\n      <div><CityList /></div>\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}