{"ast":null,"code":"import { GET_FIRST_DATA, ADD_CITY, DELETE_CITY } from './actions';\nconst initialState = fetch('https://api.openweathermap.org/data/2.5/weather?q=Kharkiv&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc').then(response => response.json()).then(data => [{\n  name: data.name,\n  temp: data.main.temp + '& degC',\n  tempMax: 26 + '&degC',\n  tempMin: 12 + '&degC',\n  description: 'description',\n  windSpeed: 127,\n  windGust: 54,\n  humidity: 84,\n  pressure: 12,\n  id: 1,\n  flag: false\n}]); // [{\n//     name: 'Kiyv',\n//     temp: 17 + '& degC',\n//     tempMax: 26 + '&degC',\n//     tempMin: 12 + '&degC',\n//     description: 'description',\n//     windSpeed: 127,\n//     windGust: 54,\n//     humidity: 84,\n//     pressure: 12,\n//     id: 1,\n//     flag: false\n// }]\n\nexport const citysReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_CITY:\n      {\n        const item = action.payload;\n        return [...state, item];\n      }\n\n    case DELETE_CITY:\n      {\n        const id = action.payload;\n        return [...state.filter(el => el.id !== id)];\n      }\n\n    case GET_FIRST_DATA:\n      return {\n        data: action.payload.data\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/redux/reducer.js"],"names":["GET_FIRST_DATA","ADD_CITY","DELETE_CITY","initialState","fetch","then","response","json","data","name","temp","main","tempMax","tempMin","description","windSpeed","windGust","humidity","pressure","id","flag","citysReducer","state","action","type","item","payload","filter","el"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,QAAzB,EAAmCC,WAAnC,QAAsD,WAAtD;AAIA,MAAMC,YAAY,GACdC,KAAK,CAAC,+GAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI,CAAC;AACXC,EAAAA,IAAI,EAAED,IAAI,CAACC,IADA;AAEXC,EAAAA,IAAI,EAAEF,IAAI,CAACG,IAAL,CAAUD,IAAV,GAAiB,QAFZ;AAGXE,EAAAA,OAAO,EAAE,KAAK,OAHH;AAIXC,EAAAA,OAAO,EAAE,KAAK,OAJH;AAKXC,EAAAA,WAAW,EAAE,aALF;AAMXC,EAAAA,SAAS,EAAE,GANA;AAOXC,EAAAA,QAAQ,EAAE,EAPC;AAQXC,EAAAA,QAAQ,EAAE,EARC;AASXC,EAAAA,QAAQ,EAAE,EATC;AAUXC,EAAAA,EAAE,EAAE,CAVO;AAWXC,EAAAA,IAAI,EAAE;AAXK,CAAD,CAFlB,CADJ,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGnB,YAAT,EAAuBoB,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKvB,QAAL;AAAe;AACX,cAAMwB,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,eAAO,CAAC,GAAGJ,KAAJ,EAAWG,IAAX,CAAP;AACH;;AACD,SAAKvB,WAAL;AAAkB;AACd,cAAMiB,EAAE,GAAGI,MAAM,CAACG,OAAlB;AACA,eAAO,CAAC,GAAGJ,KAAK,CAACK,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACT,EAAH,KAAUA,EAA7B,CAAJ,CAAP;AACH;;AACD,SAAKnB,cAAL;AACI,aAAO;AACHQ,QAAAA,IAAI,EAAEe,MAAM,CAACG,OAAP,CAAelB;AADlB,OAAP;;AAGJ;AACI,aAAOc,KAAP;AAdR;AAgBH,CAjBM","sourcesContent":["import { GET_FIRST_DATA, ADD_CITY, DELETE_CITY } from './actions';\n\n\n\nconst initialState =\n    fetch('https://api.openweathermap.org/data/2.5/weather?q=Kharkiv&units=metric&APPID=bcf45506de72468c2a0cb7f9a26542bc')\n        .then(response => response.json())\n        .then(data => [{\n            name: data.name,\n            temp: data.main.temp + '& degC',\n            tempMax: 26 + '&degC',\n            tempMin: 12 + '&degC',\n            description: 'description',\n            windSpeed: 127,\n            windGust: 54,\n            humidity: 84,\n            pressure: 12,\n            id: 1,\n            flag: false\n        }])\n\n// [{\n//     name: 'Kiyv',\n//     temp: 17 + '& degC',\n//     tempMax: 26 + '&degC',\n//     tempMin: 12 + '&degC',\n//     description: 'description',\n//     windSpeed: 127,\n//     windGust: 54,\n//     humidity: 84,\n//     pressure: 12,\n//     id: 1,\n//     flag: false\n// }]\n\n\nexport const citysReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CITY: {\n            const item = action.payload\n            return [...state, item]\n        }\n        case DELETE_CITY: {\n            const id = action.payload\n            return [...state.filter(el => el.id !== id)]\n        }\n        case GET_FIRST_DATA:\n            return {\n                data: action.payload.data,\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}