{"ast":null,"code":"import { GET_FIRST_DATA, ADD_CITY, DELETE_CITY, ONE_CITY, STATE } from './actions';\nconst initialState = [];\nexport const citysReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // case GET_FIRST_DATA: {\n    //     return {\n    //         data: action.payload.data,\n    //     }\n    // }\n    case ADD_CITY:\n      {\n        const item = action.payload;\n        return [...state, item];\n      }\n\n    case DELETE_CITY:\n      {\n        const id = action.payload;\n        return [...state.filter(el => el.id !== id)];\n      }\n\n    case ONE_CITY:\n      {\n        const id = action.payload;\n        return [...state.filter(el => el.id === id.id)];\n      }\n\n    case STATE:\n      {\n        const id = action.payload;\n        return [...state];\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/kostya/projects/Redux/codica/newCityWeather/src/redux/reducer.js"],"names":["GET_FIRST_DATA","ADD_CITY","DELETE_CITY","ONE_CITY","STATE","initialState","citysReducer","state","action","type","item","payload","id","filter","el"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,QAAzB,EAAmCC,WAAnC,EAAgDC,QAAhD,EAA0DC,KAA1D,QAAuE,WAAvE;AAEA,MAAMC,YAAY,GAAG,EAArB;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI;AACA;AACA;AACA;AACA;AACA,SAAKR,QAAL;AAAe;AACX,cAAMS,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,eAAO,CAAC,GAAGJ,KAAJ,EAAWG,IAAX,CAAP;AACH;;AACD,SAAKR,WAAL;AAAkB;AACd,cAAMU,EAAE,GAAGJ,MAAM,CAACG,OAAlB;AACA,eAAO,CAAC,GAAGJ,KAAK,CAACM,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACF,EAAH,KAAUA,EAA7B,CAAJ,CAAP;AACH;;AACD,SAAKT,QAAL;AAAe;AACX,cAAMS,EAAE,GAAGJ,MAAM,CAACG,OAAlB;AACA,eAAO,CAAC,GAAGJ,KAAK,CAACM,MAAN,CAAaC,EAAE,IAAIA,EAAE,CAACF,EAAH,KAAUA,EAAE,CAACA,EAAhC,CAAJ,CAAP;AACH;;AACD,SAAKR,KAAL;AAAY;AACR,cAAMQ,EAAE,GAAGJ,MAAM,CAACG,OAAlB;AACA,eAAO,CAAC,GAAGJ,KAAJ,CAAP;AACH;;AACD;AACI,aAAOA,KAAP;AAvBR;AAyBH,CA1BM","sourcesContent":["import { GET_FIRST_DATA, ADD_CITY, DELETE_CITY, ONE_CITY, STATE } from './actions';\n\nconst initialState = []\n\n\nexport const citysReducer = (state = initialState, action) => {\n    switch (action.type) {\n        // case GET_FIRST_DATA: {\n        //     return {\n        //         data: action.payload.data,\n        //     }\n        // }\n        case ADD_CITY: {\n            const item = action.payload\n            return [...state, item]\n        }\n        case DELETE_CITY: {\n            const id = action.payload\n            return [...state.filter(el => el.id !== id)]\n        }\n        case ONE_CITY: {\n            const id = action.payload\n            return [...state.filter(el => el.id === id.id)]\n        }\n        case STATE: {\n            const id = action.payload\n            return [...state]\n        }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}